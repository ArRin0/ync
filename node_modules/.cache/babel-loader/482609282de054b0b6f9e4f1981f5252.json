{"remainingRequest":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\ync\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\ync\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\ync\\src\\pages\\index\\current-session\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\ync\\src\\pages\\index\\current-session\\index.vue","mtime":1594571658674},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594568584718},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\babel-loader\\lib\\index.js","mtime":1594568583942},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594568584718},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\vue-loader\\lib\\index.js","mtime":1594568601747}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport SessionList from \"../components/SessionList.vue\";\nimport SessionWindow from \"../components/SessionWindow.vue\";\nexport default {\n  name: \"CurrentSession\",\n  components: {\n    SessionList: SessionList,\n    SessionWindow: SessionWindow\n  },\n  data: function data() {\n    return {\n      sessionId: \"\"\n    };\n  },\n  methods: {\n    noticeWindow: function noticeWindow(sessionId) {\n      this.sessionId = sessionId;\n    },\n    initWebsocket: function initWebsocket() {\n      if (typeof WebSocket == \"undefined\") {\n        console.log(\"您的浏览器不支持WebSocket\");\n      } else {\n        console.log(\"您的浏览器支持WebSocket\"); //实现化WebSocket对象，指定要连接的服务器地址与端口  建立连接\n\n        var userId = JSON.parse(localStorage.getItem(\"user\")).id;\n        var socketUrl = \"ws://localhost:8080/ccs/webSocket/\" + userId; // var socketUrl=\"ws://192.168.0.231:22599/webSocket/\"+userId;\n\n        console.log(socketUrl);\n\n        if (socket != null) {\n          socket.close();\n          socket = null;\n        }\n\n        socket = new WebSocket(socketUrl); //打开事件\n\n        socket.onopen = function () {\n          console.log(\"websocket已打开\"); //socket.send(\"这是来自客户端的消息\" + location.href + new Date());\n        }; //获得消息事件\n\n\n        socket.onmessage = function (msg) {\n          var serverMsg = \"收到服务端信息：\" + msg.data;\n          console.log(serverMsg); //发现消息进入    开始处理前端触发逻辑\n        }; //关闭事件\n\n\n        socket.onclose = function () {\n          console.log(\"websocket已关闭\");\n        }; //发生了错误事件\n\n\n        socket.onerror = function () {\n          console.log(\"websocket发生了错误\");\n        };\n      }\n    }\n  },\n  mounted: function mounted() {\n    //当页面显示后客服应该连接websocket\n    this.initWebsocket();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,WAAA;AACA,OAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,SAAA,EAAA;AACA,WAAA,SAAA,GAAA,SAAA;AACA,KAHA;AAIA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,OAAA,SAAA,IAAA,WAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,OAFA,MAEA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EADA,CAEA;;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,uCAAA,MAAA,CAJA,CAKA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,SAAA;;AACA,YAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,IAAA;AACA;;AACA,QAAA,MAAA,GAAA,IAAA,SAAA,CAAA,SAAA,CAAA,CAXA,CAYA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EADA,CAEA;AACA,SAHA,CAbA,CAiBA;;;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA;AACA,cAAA,SAAA,GAAA,aAAA,GAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAFA,CAGA;AACA,SAJA,CAlBA,CAuBA;;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,SAFA,CAxBA,CA2BA;;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,SAFA;AAGA;AACA;AAvCA,GAVA;AAmDA,EAAA,OAnDA,qBAmDA;AACA;AACA,SAAA,aAAA;AACA;AAtDA,CAAA","sourcesContent":["<template>\r\n\t<div class=\"current-session\">\r\n\t\t<session-list type=\"current\" @selectedSession=\"noticeWindow\"></session-list>\r\n\t\t<session-window :sessionId=\"sessionId\"></session-window>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport SessionList from '../components/SessionList.vue'\r\n\timport SessionWindow from '../components/SessionWindow.vue'\r\n\t\r\n\texport default{\r\n\t\tname:\"CurrentSession\",\r\n\t\tcomponents:{\r\n\t\t\tSessionList,SessionWindow\r\n\t\t},\r\n\t\tdata:function(){\r\n\t\t\treturn {\r\n\t\t\t\tsessionId:\"\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\tnoticeWindow:function(sessionId){\r\n\t\t\t\tthis.sessionId = sessionId;\r\n\t\t\t},\r\n\t\t\tinitWebsocket:function(){\r\n\t\t\t\tif(typeof(WebSocket) == \"undefined\") {\r\n\t\t\t\t    console.log(\"您的浏览器不支持WebSocket\");\r\n\t\t\t\t}else{\r\n\t\t\t\t    console.log(\"您的浏览器支持WebSocket\");\r\n\t\t\t\t    //实现化WebSocket对象，指定要连接的服务器地址与端口  建立连接\r\n\t\t\t\t    var userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\t\t\t\t    var socketUrl=\"ws://localhost:8080/ccs/webSocket/\"+userId;\r\n\t\t\t\t    // var socketUrl=\"ws://192.168.0.231:22599/webSocket/\"+userId;\r\n\t\t\t\t    console.log(socketUrl);\r\n\t\t\t\t    if(socket!=null){\r\n\t\t\t\t        socket.close();\r\n\t\t\t\t        socket=null;\r\n\t\t\t\t    }\r\n\t\t\t\t    socket = new WebSocket(socketUrl);\r\n\t\t\t\t    //打开事件\r\n\t\t\t\t    socket.onopen = function() {\r\n\t\t\t\t        console.log(\"websocket已打开\");\r\n\t\t\t\t        //socket.send(\"这是来自客户端的消息\" + location.href + new Date());\r\n\t\t\t\t    };\r\n\t\t\t\t    //获得消息事件\r\n\t\t\t\t    socket.onmessage = function(msg) {\r\n\t\t\t\t        var serverMsg = \"收到服务端信息：\" + msg.data;\r\n\t\t\t\t        console.log(serverMsg);\r\n\t\t\t\t        //发现消息进入    开始处理前端触发逻辑\r\n\t\t\t\t    };\r\n\t\t\t\t    //关闭事件\r\n\t\t\t\t    socket.onclose = function() {\r\n\t\t\t\t        console.log(\"websocket已关闭\");\r\n\t\t\t\t    };\r\n\t\t\t\t    //发生了错误事件\r\n\t\t\t\t    socket.onerror = function() {\r\n\t\t\t\t        console.log(\"websocket发生了错误\");\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\t//当页面显示后客服应该连接websocket\r\n\t\t\tthis.initWebsocket();\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n.current-session{\r\n\tdisplay: flex;\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/pages/index/current-session"}]}