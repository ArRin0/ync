{"remainingRequest":"D:\\文件夹\\项目\\html\\ync\\ync\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文件夹\\项目\\html\\ync\\ync\\src\\pages\\index\\current-session\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\文件夹\\项目\\html\\ync\\ync\\src\\pages\\index\\current-session\\index.vue","mtime":1594620503634},{"path":"D:\\文件夹\\项目\\html\\ync\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594620493706},{"path":"D:\\文件夹\\项目\\html\\ync\\ync\\node_modules\\babel-loader\\lib\\index.js","mtime":1594620493381},{"path":"D:\\文件夹\\项目\\html\\ync\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594620493706},{"path":"D:\\文件夹\\项目\\html\\ync\\ync\\node_modules\\vue-loader\\lib\\index.js","mtime":1594620502844}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport SessionList from '../components/SessionList.vue'\nimport SessionWindow from '../components/SessionWindow.vue'\n\nexport default{\n\tname:\"CurrentSession\",\n\tcomponents:{\n\t\tSessionList,SessionWindow\n\t},\n\tdata:function(){\n\t\treturn {\n\t\t\tsessionId:\"\",\n\t\t\tsocket:null,\n\t\t}\n\t},\n\tmethods:{\n\t\tnoticeWindow:function(sessionId){\n\t\t\tthis.sessionId = sessionId;\n\t\t},\n\t\tinitWebsocket:function(){\n\t\t\tif(typeof(WebSocket) == \"undefined\") {\n\t\t\t    console.log(\"您的浏览器不支持WebSocket\");\n\t\t\t}else{\n\t\t\t    console.log(\"您的浏览器支持WebSocket\");\n\t\t\t    //实现化WebSocket对象，指定要连接的服务器地址与端口  建立连接\n\t\t\t    var userId = JSON.parse(localStorage.getItem(\"user\")).id;\n\t\t\t    var socketUrl=\"ws://localhost:8080/ccs/webSocket/\"+userId;\n\t\t\t    // var socketUrl=\"ws://192.168.0.231:22599/webSocket/\"+userId;\n\t\t\t    console.log(socketUrl);\n\t\t\t    if(this.socket!=null){\n\t\t\t        this.socket.close();\n\t\t\t        this.socket=null;\n\t\t\t    }\n\t\t\t    this.socket = new WebSocket(socketUrl);\n\t\t\t    //打开事件\n\t\t\t    this.socket.onopen = function() {\n\t\t\t        console.log(\"websocket已打开\");\n\t\t\t        //socket.send(\"这是来自客户端的消息\" + location.href + new Date());\n\t\t\t    };\n\t\t\t    //获得消息事件\n\t\t\t    this.socket.onmessage = function(msg) {\n\t\t\t        var serverMsg = \"收到服务端信息：\" + msg.data;\n\t\t\t        console.log(serverMsg);\n\t\t\t        //发现消息进入    开始处理前端触发逻辑\n\t\t\t    };\n\t\t\t    //关闭事件\n\t\t\t    this.socket.onclose = function() {\n\t\t\t        console.log(\"websocket已关闭\");\n\t\t\t    };\n\t\t\t    //发生了错误事件\n\t\t\t    this.socket.onerror = function() {\n\t\t\t        console.log(\"websocket发生了错误\");\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t},\n\tmounted(){\n\t\t//当页面显示后客服应该连接websocket\n\t\tthis.initWebsocket();\n\t}\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/index/current-session","sourcesContent":["<template>\r\n\t<div class=\"current-session\">\r\n\t\t<session-list type=\"current\" @selectedSession=\"noticeWindow\"></session-list>\r\n\t\t<session-window :sessionId=\"sessionId\"></session-window>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport SessionList from '../components/SessionList.vue'\r\n\timport SessionWindow from '../components/SessionWindow.vue'\r\n\t\r\n\texport default{\r\n\t\tname:\"CurrentSession\",\r\n\t\tcomponents:{\r\n\t\t\tSessionList,SessionWindow\r\n\t\t},\r\n\t\tdata:function(){\r\n\t\t\treturn {\r\n\t\t\t\tsessionId:\"\",\r\n\t\t\t\tsocket:null,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\tnoticeWindow:function(sessionId){\r\n\t\t\t\tthis.sessionId = sessionId;\r\n\t\t\t},\r\n\t\t\tinitWebsocket:function(){\r\n\t\t\t\tif(typeof(WebSocket) == \"undefined\") {\r\n\t\t\t\t    console.log(\"您的浏览器不支持WebSocket\");\r\n\t\t\t\t}else{\r\n\t\t\t\t    console.log(\"您的浏览器支持WebSocket\");\r\n\t\t\t\t    //实现化WebSocket对象，指定要连接的服务器地址与端口  建立连接\r\n\t\t\t\t    var userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\t\t\t\t    var socketUrl=\"ws://localhost:8080/ccs/webSocket/\"+userId;\r\n\t\t\t\t    // var socketUrl=\"ws://192.168.0.231:22599/webSocket/\"+userId;\r\n\t\t\t\t    console.log(socketUrl);\r\n\t\t\t\t    if(this.socket!=null){\r\n\t\t\t\t        this.socket.close();\r\n\t\t\t\t        this.socket=null;\r\n\t\t\t\t    }\r\n\t\t\t\t    this.socket = new WebSocket(socketUrl);\r\n\t\t\t\t    //打开事件\r\n\t\t\t\t    this.socket.onopen = function() {\r\n\t\t\t\t        console.log(\"websocket已打开\");\r\n\t\t\t\t        //socket.send(\"这是来自客户端的消息\" + location.href + new Date());\r\n\t\t\t\t    };\r\n\t\t\t\t    //获得消息事件\r\n\t\t\t\t    this.socket.onmessage = function(msg) {\r\n\t\t\t\t        var serverMsg = \"收到服务端信息：\" + msg.data;\r\n\t\t\t\t        console.log(serverMsg);\r\n\t\t\t\t        //发现消息进入    开始处理前端触发逻辑\r\n\t\t\t\t    };\r\n\t\t\t\t    //关闭事件\r\n\t\t\t\t    this.socket.onclose = function() {\r\n\t\t\t\t        console.log(\"websocket已关闭\");\r\n\t\t\t\t    };\r\n\t\t\t\t    //发生了错误事件\r\n\t\t\t\t    this.socket.onerror = function() {\r\n\t\t\t\t        console.log(\"websocket发生了错误\");\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\t//当页面显示后客服应该连接websocket\r\n\t\t\tthis.initWebsocket();\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n.current-session{\r\n\tdisplay: flex;\r\n}\r\n\r\n\r\n</style>\r\n"]}]}