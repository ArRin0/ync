{"remainingRequest":"D:\\GitHub\\ync\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\ync\\src\\pages\\static\\components\\column.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\GitHub\\ync\\src\\pages\\static\\components\\column.vue","mtime":1594546299956},{"path":"D:\\GitHub\\ync\\node_modules\\css-loader\\index.js","mtime":1594457101820},{"path":"D:\\GitHub\\ync\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1594457104893},{"path":"D:\\GitHub\\ync\\node_modules\\postcss-loader\\src\\index.js","mtime":1594457104096},{"path":"D:\\GitHub\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594457101316},{"path":"D:\\GitHub\\ync\\node_modules\\vue-loader\\lib\\index.js","mtime":1594457104892}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box{\n    width: 100%;\n    height: 350px;\n}\n",{"version":3,"sources":["column.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA","file":"column.vue","sourceRoot":"src/pages/static/components","sourcesContent":["<template>\n  <div class=\"box\">\n    <div v-bind:id=id ref=\"data\" style=\"width: 100%;height: 350px\"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"column\",\n    props: [\"id\", \"data\"], //接受从父组件传回的值\n    data() {\n      return {}\n    },\n    //实时监听父组件传过来的值\n    //然后执行drawBar方法 重新绘制柱状图\n    watch: {\n      data: {\n        handler(value) {\n          this.drawBar(value)\n        },\n        deep: true//深度监听\n      }\n    },\n    mounted() {\n      this.drawBar(this.data)\n    },\n    methods: {\n      drawBar({\n                textTile = '',  // 标题 柱状图options里需要用的数据这里作为参数从data里面取值\n                totalText = '',//标签\n                nameArray = [],//x轴的数据\n                series = [],//series的数据\n              } = {}  //作为一个整体的参数\n      ) {   //现在是真正开始画图表的时候\n        let barBox = this.$echarts.init(document.getElementById(this.id));\n        //给图表一个指定的容器dom\n        let option = { //设置图表的options\n          //1.先设置图表的标题\n          title: {\n            text: textTile,//使用父组件传过来的数据\n            x:15,\r\n            y:10,\r\n            textStyle:{\r\n            \twidth: 218,\r\n            \theight: 24,\r\n            \tfontSize: 18,\r\n            \tfontWeight: 0,\r\n            }\n          },\n          //2.直角坐标系绘图区域\n          /* grid: {\n            top: '25%',\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          }, */\n          //3.x轴相关结构\n          xAxis:\n            {\n              data: nameArray,\n              type: 'category',\r\n              axisLine:{\r\n              \tlineStyle:{\r\n              \t\tcolor: 'grey',\r\n              \t\twidth: 2,\r\n              \t}\r\n              },\n              }, \n          //4.y轴相关结构\n          yAxis:\n            {\n              type: 'value',\r\n              boundaryGap: [52, 52],\r\n              max: 10,\r\n              min: 2,\r\n              splitNumber: 4,\r\n              axisLine:{\r\n              \tlineStyle:{\r\n              \t\tcolor: 'grey',\r\n              \t\twidth: 0,\r\n              \t}\r\n              }\n            },\n          //5.固定说明文字\n         graphic: [{\n            type: 'group',\n            id: 'textGroup1',\n            left: '1%',\n            top: '15%',\n\n            // bounding: 'raw',\n            children: [\n              {\n                type: 'text',\n                z: 100,\n                top: 'middle',\n                left: 'center',\n                style: {\n                  // text: ['注册总人数为'+totalNumber],\n                  text: totalText,\n                  fontSize: 15,\n                  fill: '#000',\n                }\n              }\n\n            ]\n          }],\n          //6.图表的相关series设置\n          series: series,\n        };\n        //柱状图的相关结构已经定义好了调用setoption\n        barBox.setOption(option, true);\n        console.log(option)\n        window.addEventListener(\"resize\", function () {\n          barBox.resize();\n        })\n      }\n    }\n  }\n</script>\n\n\n<style>\n.box{\n    width: 100%;\n    height: 350px;\n}\n</style>\n"]}]}