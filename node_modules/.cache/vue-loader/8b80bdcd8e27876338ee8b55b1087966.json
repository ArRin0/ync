{"remainingRequest":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\ync\\src\\pages\\static\\components\\piechart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\ync\\src\\pages\\static\\components\\piechart.vue","mtime":1594568603599},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594568584718},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\babel-loader\\lib\\index.js","mtime":1594568583942},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594568584718},{"path":"C:\\Users\\asus\\Desktop\\ync\\node_modules\\vue-loader\\lib\\index.js","mtime":1594568601747}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n  export default {\n    name: \"piechart\",\n    props: [\"id\", \"data\"], //接受从父组件传回的值\n    data() {\n      return {}\n    },\n    //实时监听父组件传过来的值\n    //然后执行drawBar方法 重新绘制柱状图\n    watch: {\n      data: {\n\t\t  deep: true,//深度监听\n\t\t  immediate: true,\n        handler(value) {\n          this.drawBar(value);\n        },\n      }\n    },\n    mounted() {\n      this.drawBar(this.data)\n    },\n    methods: {\n      drawBar({\n                textTile = '',  // 标题 柱状图options里需要用的数据这里作为参数从data里面取值\n                nameArray = [],//饼图的标签\n                series = [],//series的数据\n              } = {}  //作为一个整体的参数\n      ) {   //现在是真正开始画图表的时候\n        let barBox = this.$echarts.init(document.getElementById(this.id));\n        //给图表一个指定的容器dom\n        let option = { //设置图表的options\n\t\t    tooltip: { //设置鼠标触碰时能看到具体数据\n\t\t        trigger: 'item',\n\t\t        formatter: '{a} <br/>{b}: {c} ({d}%)'\n\t\t    },\n          //1.先设置图表的标题\n          title: {\n            text: textTile,//使用父组件传过来的数据\n            x:20,\n            textStyle:{\n            \twidth: 218,\n            \theight: 24,\n            \tfontSize: 18,\n            \tfontWeight: 0,\n            }\n          },\n         legend: {\n                 orient: 'vertical',\n                 right: 50,\n                 data: nameArray,\n             },\n\n          //6.图表的相关series设置\n          series: series,\n        };\n        //饼状图的相关结构已经定义好了调用setoption\n        barBox.setOption(option, true);\n        console.log(option)\n        window.addEventListener(\"resize\", function () {\n          barBox.resize();\n        })\n      }\n    },\n  }\n",{"version":3,"sources":["piechart.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"piechart.vue","sourceRoot":"src/pages/static/components","sourcesContent":["<template>\r\n  <div class=\"echarts\">\r\n      <div v-bind:id=id ref=\"data\" style=\"width: 470px;height: 350px\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"piechart\",\r\n    props: [\"id\", \"data\"], //接受从父组件传回的值\r\n    data() {\r\n      return {}\r\n    },\r\n    //实时监听父组件传过来的值\r\n    //然后执行drawBar方法 重新绘制柱状图\r\n    watch: {\r\n      data: {\r\n\t\t  deep: true,//深度监听\r\n\t\t  immediate: true,\r\n        handler(value) {\r\n          this.drawBar(value);\r\n        },\r\n      }\r\n    },\r\n    mounted() {\r\n      this.drawBar(this.data)\r\n    },\r\n    methods: {\r\n      drawBar({\r\n                textTile = '',  // 标题 柱状图options里需要用的数据这里作为参数从data里面取值\r\n                nameArray = [],//饼图的标签\r\n                series = [],//series的数据\r\n              } = {}  //作为一个整体的参数\r\n      ) {   //现在是真正开始画图表的时候\r\n        let barBox = this.$echarts.init(document.getElementById(this.id));\r\n        //给图表一个指定的容器dom\r\n        let option = { //设置图表的options\r\n\t\t    tooltip: { //设置鼠标触碰时能看到具体数据\r\n\t\t        trigger: 'item',\r\n\t\t        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n\t\t    },\r\n          //1.先设置图表的标题\r\n          title: {\r\n            text: textTile,//使用父组件传过来的数据\r\n            x:20,\r\n            textStyle:{\r\n            \twidth: 218,\r\n            \theight: 24,\r\n            \tfontSize: 18,\r\n            \tfontWeight: 0,\r\n            }\r\n          },\r\n         legend: {\r\n                 orient: 'vertical',\r\n                 right: 50,\r\n                 data: nameArray,\r\n             },\r\n\r\n          //6.图表的相关series设置\r\n          series: series,\r\n        };\r\n        //饼状图的相关结构已经定义好了调用setoption\r\n        barBox.setOption(option, true);\r\n        console.log(option)\r\n        window.addEventListener(\"resize\", function () {\r\n          barBox.resize();\r\n        })\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n\r\n<style>\r\n</style>"]}]}