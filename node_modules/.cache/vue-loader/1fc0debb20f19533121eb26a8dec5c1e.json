{"remainingRequest":"C:\\Users\\Hastur\\Desktop\\day13\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hastur\\Desktop\\day13\\src\\pages\\login\\regist.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hastur\\Desktop\\day13\\src\\pages\\login\\regist.vue","mtime":1593763179000},{"path":"C:\\Users\\Hastur\\Desktop\\day13\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Hastur\\Desktop\\day13\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Hastur\\Desktop\\day13\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Hastur\\Desktop\\day13\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport layout from './components/layout.vue'\nimport Gform from './components/form.vue'\nimport {\n\tregist\n} from \"../../api/customerService.js\"\n\nexport default {\n\tname: \"login\",\n\tcomponents: {\n\t\tlayout,\n\t\tGform\n\t},\n\tmethods: {\n\t\t// 如何处理注册事件\n\t\t//当用户在子组件上填写手机号码、密码后，点击注册按钮时，获取到数据，提交到服务器，完成注册功能\n\t\tdoSubmit: function(data) {\n\t\t\t// 得到子组件用户输入的数据\n\t\t\tthis.$axios\n\t\t\t\t.post(\"/cs/regist\", data) //请求接口/cs/regist，\n\t\t\t\t.then(resp => { //当服务器返回结果后处理\n\t\t\t\t\tlet {\n\t\t\t\t\t\tdata\n\t\t\t\t\t} = resp;\n\t\t\t\t\tif (data.success == true) {\n\t\t\t\t\t\t// 跳转到登陆页面\n\t\t\t\t\t\tthis.$router.push('/login'); //编程的方式实现\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => { //当请求失败，处理\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t}\n\t}\n}\n",{"version":3,"sources":["regist.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"regist.vue","sourceRoot":"src/pages/login","sourcesContent":["<template>\r\n\t<layout>\r\n\t\t<!-- 当abcEvent发生的时候，执行doSubmit -->\r\n\t\t<Gform type=\"注册\" @abcEvent=\"doSubmit\"></Gform>\r\n\t</layout>\r\n</template>\r\n\r\n<script>\r\n\timport layout from './components/layout.vue'\r\n\timport Gform from './components/form.vue'\r\n\timport {\r\n\t\tregist\r\n\t} from \"../../api/customerService.js\"\r\n\r\n\texport default {\r\n\t\tname: \"login\",\r\n\t\tcomponents: {\r\n\t\t\tlayout,\r\n\t\t\tGform\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 如何处理注册事件\r\n\t\t\t//当用户在子组件上填写手机号码、密码后，点击注册按钮时，获取到数据，提交到服务器，完成注册功能\r\n\t\t\tdoSubmit: function(data) {\r\n\t\t\t\t// 得到子组件用户输入的数据\r\n\t\t\t\tthis.$axios\r\n\t\t\t\t\t.post(\"/cs/regist\", data) //请求接口/cs/regist，\r\n\t\t\t\t\t.then(resp => { //当服务器返回结果后处理\r\n\t\t\t\t\t\tlet {\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = resp;\r\n\t\t\t\t\t\tif (data.success == true) {\r\n\t\t\t\t\t\t\t// 跳转到登陆页面\r\n\t\t\t\t\t\t\tthis.$router.push('/login'); //编程的方式实现\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => { //当请求失败，处理\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>\n"]}]}